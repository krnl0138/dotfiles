# Заметки о программировании

Отзывы о Яндекс.Практикуме
https://vc.ru/life/58673-yandeks-praktikum-pervye-vpechatleniya

### Что учить

- Angular, React, Vue

- Связка: Ruby_+React_+NodeJS

- Сборка проекта -- Webpack.

JavaScript
- ES6
- Babel

С реальных резюме (150к+)
- React, Twig, Webpack
- Уверенные знания ES6, HTML5, CSS3, Bootstrap (3.x), LESS, jQuery, Ajax.
    - Опыт работы с Three.js\WebGL
- умение использовать инструменты автоматизации и сборки (Babel, Gulp, Webpack);

### Важные термины

- стек -- набор инструментов проекта: языки + фреймворки
- стиль -- описание внешнего вида элемента
- поток -- порядок расположения элементов на сайте
- Single Page Application (SPA) -- сайты, чей фронтенд целиком строится в браузере

Яндекс: кто такой бэкендер
https://academy.yandex.ru/posts/chem-zanimayutsya-bekendery-i-kak-nachat-rabotat-v-etoy-oblasti

### Перечень профессий на яндекс.практикуме:
- Веб-разработчик:
    фронтенд-разработчик со знанием бэкенда

Веб-разработчик разрабатывает сайт на языках HTML, CSS и JavaScript. Создаёт
интерфейсы с помощью библиотеки React. Настраивает Git, чтобы работать в
команде, и Webpack, чтобы собирать файлы проекта автоматически. Веб-разработчик
разбирается и в устройстве сервера: может настроить Nginx и запрограммировать
сервер на Node.js.

- Инженер по тестированию:
    отвечает за качество работы продукта, разрабатывает сценарии тестирования, находит баги и сообщает о них команде.
- Специалист по Data Science:
    Работает с большим объёмом данных и применяет машинное обучение для обнаружения неочевидных закономерностей.
- Python-разработчик:
    Работает над сайтами и приложениями, отвечает за внутреннюю часть проекта, скрытую от глаз пользователей.
- Аналитик данных:
    Собирает, анализирует, визуализирует данные и помогает принимать решения.
- Дата инженер:
    Создаёт инфраструктуру, чтобы данные хранились и обрабатывались стабильно, а затем без сбоев попадали в аналитические системы.
- Специалист по нейросетям:
    Создаёт и обучает нейронные сети для решения прикладных задач.
- Дизайнер интерфейсов:
    Проектирует внешний облик сайтов и приложений: делает их удобными и красивыми.
- Алгоритмы и структуры данных:
    Важное орудие крутого разработчика. Пригодится на собеседованиях в топовые компании.
- Разработчик С++:
    Пишет код, востребованный в любой отрасли: от браузеров до гейм-девелопмента.
- Инженер по автоматизации тестирования:
    Ускоряет тестирование продукта: разрабатывает автоматические тесты и оптимизирует рутинные процессы.
- IT-рекрутер:
    Помогает компаниям и IT-специалистам найти друг друга.
- Мидл веб-разработчик:
    Проектирует и разрабатывает масштабируемый и поддерживаемый фронтенд веб-приложения. В его арсенале архитектура, паттерны проектирования и алгоритмы


### Яндекс.Школа разработки интерфейсов

Старт 01.09.
3 месяца

Требования:
- HTML
- CSS
- JavaScript
- иметь опыт разработки интерфейсов — подойдёт даже небольшой.

БЭМ: рекомендовано просмотреть перед подачей заявки
https://ru.bem.info/methodology/

### Оптимизация

Программисты тратят огромное количество времени, размышляя и беспокоясь о
некритичных местах кода, и пытаются оптимизировать их, что исключительно
негативно сказывается на последующей отладке и поддержке. Мы должны вообще
забыть об оптимизации в, скажем, 97% случаев; более того, поспешная оптимизация
является корнем всех зол. И напротив, мы должны уделить все внимание оставшимся
3%.  Дональд Кнут, Структурное программирование с операторами go to
http://optimization.guide/intro.html

### Tools

Playgrounds:
- jsfiddle
- CodePen
- JS Bin
- Plunker
- Liveweave

Check some features:
https://caniuse.com/

Parse CSS and add vendor prefixes to rules by Can I Use
https://github.com/postcss/autoprefixer

Trainers:
https://www.codewars.com/

JSX — это просто расширение синтаксиса JavaScript, который выглядит очень
похоже на XML. Это своего рода еще один способ описать DOM. Думай о нем, как об
улучшенном HTML.

### О фронтэнде

2 yrs @Google
https://www.youtube.com/watch?v=Gc0msPEmGjA

4 categories of work:

- Styling (CSS) -- не писал в Гугле, но много в своем стартапе
- Layout (HTML) -- ключевая часть, всегда необходима
- State Management -- состояния веб-приложения в момент совершения действий
- Dealing with asyncronicity --

https://www.youtube.com/watch?v=rl9D00LvMho

1. Не тратить времени на то, что не нужно в профессии
2. Некоторые вещи необходимо знать отлично
3. Постоянство и упорство
4. Используйте то, что работает для вас

Как наниматься
https://www.freecodecamp.org/news/5-key-learnings-from-the-post-bootcamp-job-search-9a07468d2331/

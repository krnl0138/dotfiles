### Общее

- Справочник HTML&CSS
https://developer.mozilla.org/en-US/docs/Web/HTML
https://developer.mozilla.org/en-US/docs/Web/CSS

- Разметка CSS + HTML
https://ru.learnlayout.com/float.html

HTML не язык программирования, он не Тьюринг полный

Гораздо лучше держать стили для одного компонента рядом. По принципу «от общего
— к частному», когда правила для дочерних лежат ниже правил для родителей.

- С центрированием блочных элементов работает особое значение auto. Оно
автоматически устанавливает максимально возможный отступ по горизонтали. Если
задать свойствам margin-left и margin-right значение auto, получатся
максимальные отступы с обеих сторон, и элемент встанет по центру своего
родителя.

    margin: 0 auto;

Пока section с классом content упирается в края экрана, центрировать его не
получится. Сократите ширину элемента до 790px.

- Не больше трёх шрифтов на сайт. Один для заголовков, второй — для всех
остальных текстов, третий — для выделения важных слов. И всё.

- Обычно на сайте два цвета: ведущий и акцентный. Подобрать удачную цветовую
пару можно специальными инструментами.

- Чтобы увидеть элемент -- нужно задать ему фон в css стилях

### CSS

- SCSS is a variant of Sass, a popular CSS preprocessor that allows us to use things like variables.

### Теги HTML

В HTML существует шесть тегов заголовков разного размера: h1, h2, h3, h4, h5,
h6. Идея заимствована из книг, где есть название на форзаце (h1), заголовки
частей (h2), разделов (h3) и более мелких глав (h4, h5, h6).

Дочерний и родительский тег

Все, что видно пользователю помещается в body

<link rel="icon" href="fav.ico" type="image">
<!-- rel — назначение (от англ. relation, отношение); здесь это иконка -->
<!-- type — тип файла. здесь это картинка -->
<!-- href — уже знакомый атрибут адреса -->

    <link rel="icon" type="image" href="https://code.s3.yandex.net/web-code/playlist-favicon.ico">

атрибут стиля и его свойство и значение
    <h1 style="color: springgreen; font-size: 36px;">Твин Пикс</h1>

CSS внутри style внутри head в самом конце
CSS стили в отдельный файл
    <link rel="stylesheet" href="style.css">

div объединяет теги в блок

header как div, но браузер по нему распознают входную секцию сайта

задача width height в % от родительского объекта, но
100vw & 100vh -- максимальный размер относительно viewport (окна просмотра)
например, height: 50vh;

Задача масштабируемого блока
    max-width: 600px

Обнулять отступы для элементов для контроля, в начале css-файла селектор с margin_: 0;

### Теги изображения фона

Фоновая картинка всегда над цветом
    background-image: url(https://yastatic.net/s3/auth2/_/msoffice.d1ada09f.svg);

Сохранит пропорции и растянет/сожмет картинку в блоке
    background-size: cover;

Вся картинка уместилась, сохранит пропорции
    background-size: contain;

первое значение — ширина, второе — высота
    background-size: 220px 400px;

Стоит по умолчанию
    background-repeat: no-repeat
                        repeat-y;

background-position
по центру — сразу по горизонтали и по вертикали

    background-position: center;
по горизонтали к правому краю, по вертикали — к нижнему

    background-position: right bottom;

можно указать сдвиг в пикселях
по горизонтали сдвиг на 150px вправо от левого верхнего угла блока
по вертикали — на 50px вверх

    background-position: 150px -50px;
---

Улучшить читаемость и повысить контраст -- добавить полупрозрачный черный квадрат
    rgba(0, 0, 0, .5);

Если не задано иное, то используются стили родительского тега -- наследование

Селектор body в теле файла-css стиля сразу же после сброса и обнуления стилей браузера

### Теги текста

За шрифт отвечает группа font, за поведение текстовых элементов — группа text.

Из группы font популярны свойства:
- font-size -- размер шрифта
- font-weight -- «вес» шрифта, толщина (отношение ширины штриха к высоте буквы)
- font-family -- семейство шрифта
- font-style -- стиль шрифта. например, italic — курсивный шрифт

- text-align:
- text-decoration: underline;
- text-decoration: none;

Интерлиньяж
- line-height:

- letter-spacing

Font-weight -- от 100 до 900

---

Тег section как div, но сразу указывает браузеру на наличие секции

### Классы

Класс позволяет обращаться к стилю элемента 'card'
    <div class="card"></div>

Стиль селектора класса начинается с точки

    .white-text {
        color: #fff;
    }

Несколько классов пишут внутри значения одного атрибута class через пробел:

    <div class="first second"></div>
    <!-- у элемента есть и класс first, и класс second -->

Для уникальных «разовых» элементов стоит использовать `id`
    id="important"

В CSS id указываются через решетку #, а классы — через точку ..

### Комментарии


<!-- <p>невидимый пользователю абзац</p> -->
/* в CSS — такими */

---

Для сброса размеров текста воспользуйтесь комбинацией `font-size: 100%;
font-weight: normal;`. Первое свойство установит единый для всех элементов
размер шрифта. Второе свойство задаст толщину шрифта со значением normal.

### Отступы

"направление расстановки — по часовой стрелке, начиная сверху"

"4 значения"
"для каждой стороны – своё значение"
    padding: 20px 15px 30px 15px;

"3 значения"
"верх — 10px, по бокам — 20px, низ — 30px"
    padding: 10px 20px 30px;

"2 значения"
"верх и низ — 10px, по бокам — 20px"
    padding: 10px 20px;

"1 значение"
"10px со всех сторон"
    padding: 10px;

### Стили границы элемента

border-color: #000; /* цвет границы */
border-width: 1px; /* толщина границы в px */
border-style: solid; /* начертание границы (см. картинку) */

Краткая форма
/* непрерывная граница черного цвета толщиной 3px
    border: 3px solid #000;

### Box-sizing

`box-sizing` (англ. «расчёт размеров контейнера») — оно определяет поведение
границ и внутренних отступов. По умолчанию для всех элементов действует правило
box-sizing: content-box, границы и внутренний отступ расширяют элемент.

Установив для box-sizing значение border-box, вы измените фокус элемента:
границы и внутренний отступ отрисуются внутрь. Общая ширина будет равна
значению width. Довольно интуитивное поведение, поэтому нормальная практика —
задать его сразу для всех элементов на странице.

### Display, переназначение типов элементов

Блочные элемент
- занимают всю ширину, в отличие от изображений
Строчные элементы
- занимают ровно столько места, сколько контента в них содержится. Если они
  идут подряд, то по умолчанию все расположены на одной строке. Им невозможно
  задать ширину или высоту — они игнорируют указание размеров через стили.
Блочно-строчный элемент
- комбинированный тип. С одной стороны, они не занимают собой всю горизонталь,
  с другой, восприимчивы к указанию размеров через CSS. Например, так ведут
  себя элементы img.

Переопределяется тип свойством display:
    display: block; /* сделает элемент блочным */
    display: inline; /* сделает элемент строчным */
    display: inline-block; /* сделает элемент блочно-строчным */

И строчные, и блочно-строчные элементы ведут себя, как слова в предложении. А
между словами стоят пробелы, ширина которых зависит от размера шрифта. Чтобы
убрать их, нужно использовать `font-size: 0px`
https://stackoverflow.com/questions/5078239/how-do-i-remove-the-space-between-inline-block-elements

Элемент с таким свойством становится flex-элементом и — как супергерой —
получает сверхспособности. Например, внутри него margin: auto работает не
только по горизонтали!

    display: flex;

Display: none представляет элемент как будто его не существует
Visability: hidden непосредственно скрывает его.

    display: none;
    visibility: hidden;

Можно использовать inline-block для разметки.
Несколько вещей, которые вы должны зарубить на носу:

- inline-block элементы зависят от свойства vertical-align для которого, вы вероятно хотите установить top.
- Вам нужно установить ширину для каждой колонки
- Будет пустое место между колонками если между ними будут пробелы

### Тени

Тень — полезный инструмент дизайна. За её создание отвечает свойство box-shadow
(англ. box shadow, «тень блока»).

    div {
    box-shadow: -2px 2px 5px #FD6969;
    /* сдвинута на 2px влево, на 2px вниз */
    /* радиус размытия — 5px */
    /* цвет красноватый, #FD6969 */
    }

Последовательность значений, которые описывают тень:

- горизонтальный сдвиг (отрицательное значение помещает тень левее элемента, положительное — правее);
- вертикальный сдвиг (отрицательное значение помещает тень выше элемента, положительное — ниже);
- радиус размытия (чем значение больше, тем тень шире и бледней);
- цвет (задаётся так же, как цвет текста или фона)

Тень можно создавать не только для границ элемента, но и для текста. В этом
случае используют свойство text-shadow (от англ. text shadow, «тень текста»).
Оно работает аналогично.

### Footer

Для создания подвала в HTML существует специальный элемент footer. Он, как div,
header или section, создаёт пустую коробку.

### Position

- static
Дефолтная опция

- relative

Появляется возможность использовать дополнительные свойства

    .relative1 {
    position: relative;
    }

    .relative2 {
    position: relative;
    top: -20px;
    left: 20px;
    background-color: white;
    width: 500px;
    }

- fixed
Элемент словно приклеен к экрану
У мобильных браузеров достаточно шаткая поддержка фиксированного позиционирования

    .fixed {
    position: fixed;
    bottom: 0;
    right: 0;
    width: 200px;
    background-color: white;
    }

- absolute
Позиционирование элемента относительно его родителя, в отличие от relative

    .relative {
    position: relative;
    width: 600px;
    height: 400px;
    }
    .absolute {
    position: absolute;
    top: 120px;
    right: 0;
    width: 300px;
    height: 200px;
    }

### Float

Свойство обертывает текст вокруг изображения

    img {
    float: right;
    margin: 0 0 1em 1em;
    }

Пример работы с картиной

    article img {
    float: right;
    width: 50%;
    }

### Clear

https://ru.learnlayout.com/clear.html
Свойство, которое работает с float
Здесь убирает с section box, который был слева, тк он float

    <div class="box">...</div>
    <section>...</section>

    .box {
    float: left;
    width: 200px;
    height: 100px;
    margin: 1em;
    }
    .after-box {
    clear: left;
    }

Это решение необходимо, если размер изображения для float больше, чем контейнер

    .clearfix {
    overflow: auto;
    }

https://stackoverflow.com/questions/211383/what-methods-of-clearfix-can-i-use

    <div style="overflow: auto;">
    <img
        style="float: right;"
        src="path/to/floated-element.png"
        width="500"
        height="500"
    >
    <p>Your content here…</p>
    </div>

### Media queries

https://mediaqueri.es/
https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries

    @media screen and (min-width:600px) {
    nav {
        float: left;
        width: 25%;
    }
    section {
        margin-left: 25%;
    }
    }
    @media screen and (max-width:599px) {
    nav li {
        display: inline;
    }
    }

### CSS columns

CSS columns новый набор, поэтому вы должны использовать префиксы, также он не
будет работать в IE9 или в Opera Mini. Подробнее о дополнительных свойствах
можно click почитать здесь.

    .three-column {
    padding: 1em;
    -moz-column-count: 3;
    -moz-column-gap: 1em;
    -webkit-column-count: 3;
    -webkit-column-gap: 1em;
    column-count: 3;
    column-gap: 1em;
    }

### Flexbox

Центрирование по вертикали с использованием flexbox

    .vertical-container {
    height: 300px;
    display: -webkit-flex;
    display:         flex;
    -webkit-align-items: center;
            align-items: center;
    -webkit-justify-content: center;
            justify-content: center;
    }

Создание разметки с 4 колонками

    .container {
    display: -webkit-flex;
    display: flex;
    }
    .initial {
    -webkit-flex: initial;
            flex: initial;
    width: 200px;
    min-width: 100px;
    }
    .none {
    -webkit-flex: none;
            flex: none;
    width: 200px;
    }
    .flex1 {
    -webkit-flex: 1;
            flex: 1;
    }
    .flex2 {
    -webkit-flex: 2;
            flex: 2;
    }


CSS фреймворки:

- blueprintcss.org
- bluetrip.org
- susy.oddbird.net
- imperavi.com/kube
- semantic-ui.com
- unsemantic.com
- twitter.github.com/bootstrap
- foundation.zurb.com
- groundworkcss.github.com
- purecss.io
